from clientManager import ClientManager
from file_system import FileSystem
from connexion import Connexion
from protocole_xml import ProtocoleXml
import time
import sl4a

class AndroidInterface:
    root = '/storage/emulated/0/dropbox/'
    ipInfo = 'ipInfo.txt'
    ipInfoPath = 'settings/'
    fileSystem = FileSystem
    ipInfoContent = ''

    def __init__(self):
        self.fileSystem = FileSystem(self.root)
        folderIsEmpty = self.fileSystem.folder_is_empty(self.root)

        if folderIsEmpty == False :
            self.deleteDropboxWindow()

        try:
            self.ipInfoContent = self.fileSystem.get_file_content(self.ipInfoPath, self.ipInfo)
        except:
            self.ipInfoContent = ''

        print(self.ipInfoContent)
        if self.ipInfoContent == '':
            self.ipInfoWindow()

        self.updateLoop()

    def deleteDropboxWindow(self):
        title = 'Dropbox'
        message = ('Voulez-vous effacer l\'arboresence '
                   'Dropbox locale existante?')
        droid = sl4a.Android()
        droid.dialogCreateAlert(title, message)
        droid.dialogSetPositiveButtonText('Oui')
        droid.dialogSetNegativeButtonText('Non')
        droid.dialogShow()
        response = droid.dialogGetResponse().result

        if response['which'] == 'positive' :
            self.fileSystem.clean_local_dropBox()

    def ipInfoWindow(self):
        droid = sl4a.Android()
        serveur = droid.dialogGetInput("Veuillez entrer le numéro de serveur svp")
        port = droid.dialogGetInput("Veuillez entrer le numéro de port svp")
        stringInfo = serveur.result + ' ' + port.result #ip + espace + port
        self.fileSystem.write_in_file(self.ipInfoPath, self.ipInfo, stringInfo)
        self.ipInfoContent = self.fileSystem.get_file_content(self.ipInfoPath, self.ipInfo)

    def updateLoop(self):
        client = self.create_client()
        title = 'Dropbox'
        message = 'Les fichiers se mettent à jour...'
        droid = sl4a.Android()
        while(True == True):
            droid.dialogCreateSpinnerProgress(title, message)
            droid.dialogShow()
            client.update('')
            time.sleep(2)
            droid.dialogDismiss()
            time.sleep(30)

    def create_client(self):
        ipInfo = self.ipInfoContent.split()

        host = ipInfo[0]
        port = int(ipInfo[1])
        connexion = Connexion(host, port)

        protocol = ProtocoleXml()

        ClientManager(connexion, protocol, self.fileSystem)
