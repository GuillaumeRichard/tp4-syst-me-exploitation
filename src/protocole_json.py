#!/usr/bin/python3
# -*- coding: utf-8 -*-

from protocole import Protocole
import json


class ProtocoleJson(Protocole):
    """Interface du langage de communication JSON"""

    def __init__(self):
        super(Protocole, self).__init__()
    pass

    def add_row_to_json_table(self, key, value, data):
        data[key] = value

    def json_table_to_json_text(self, data):
        json_data = json.dumps(data)
        return json_data

    def interpret(self, json_data, key):
        data = json.loads(json_data)
        return data[key]

    def interpret(self, json_data, parent_tag, child_tag=''):
        data = json.loads(json_data)

        if child_tag:
            return self.interpret_complex_json(data, parent_tag, child_tag)
        else:
            return self.interpret_simple_json(data, parent_tag)

    def interpret_simple_json(self, data, tag_name):
        return data[tag_name]

    def interpret_complex_json(self, data, parent_tag, child_tag):
        returned_data = ''
        for node in data[parent_tag][child_tag]:
            returned_data += node + '\n'

        return returned_data



    def get_connexion(self):
        data = {}
        key = "salutation"
        value = "bonjourServeur"
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def get_server_name(self):
        data = {}
        key = "action"
        value = "questionNomServeur"
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def verify_folder_exists(self, folder_name):
        data = {}
        key = "questionListeDossiers"
        value = folder_name
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def create_folder(self, folder_name):
        data = {}
        key = "creerDossier"
        value = folder_name
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def get_folder_list(self, folder_name):
        data = {}
        key = "questionListeDossiers"
        value = folder_name
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def delete_folder(self, folder_name):
        data = {}
        key = "supprimerDossier"
        value = folder_name
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)

    def quit(self):
        data = {}
        key = "action"
        value = "quitter"
        self.add_row_to_json_table(key, value, data)
        return self.json_table_to_json_text(data)
