
class Client:
    """
    Classe représentant le client
    """

    BAD_COMMAND = "Cette commande est invalide. \n"

    def __init__(self, connexion, protocole, validateur_commande):
        self.connexion = connexion
        self.protocole = protocole
        self.validateurCommande = validateur_commande
        self.printWelcomeMessage()
        self.listenForInput()

    def printWelcomeMessage(self):
        print("Bienvenue à Dropbox version cheap! \n")

    def listenForInput(self):
        while True:
            client_input = input("Entrez la commande désirée: ")
            if self.validateurCommande.validerCommande(client_input):
                protocol_input = self.convert_to_protocol(client_input)
                self.connexion.send(protocol_input)
                print(self.connexion.receive())
            else:
                self.printBadCommand()

    def printBadCommand(self):
        print(Client.BAD_COMMAND)

    def convert_to_protocol(self, client_input):
        return self.protocole.interprete(client_input)
