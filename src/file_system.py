from ascii_encoder import AsciiEncoder
from signature_generator import SignatureGenerator
import os


class FileSystem:
    """
    Cette classe fait l'interface avec le syst√®me de fichiers
    """

    def __init__(self, root):
        self.root = root

    def folder_exists(self, directory):
        complete_directory = self.root + directory
        return os.path.exists(complete_directory)

    def fichier_existe(self, directory):
        complete_directory = self.root + directory
        return complete_directory.is_file()

    def liste_dossiers(self, directory):
        complete_directory = self.root + directory
        return os.walk(complete_directory)

    def liste_fichiers(self, directory):
        complete_directory = self.root + directory
        return filter(complete_directory.isfile, os.listdir(complete_directory))

    def create_folder(self, directory):
        os.mkdir(directory)

    def create_file(self, directory, content):
        file = open(self.root+directory, "w+")
        file.write(content)

    def get_md5_signature(self, file_name):
        content = self.get_file_content(file_name)
        signature = SignatureGenerator.generate_signature(content)

        return signature

    def get_file_content(self, file_name):
        complete_file_name = self.root + file_name
        content = open(complete_file_name).read()

        return content

    def get_encoded_content(self, file_name):
        content = self.get_file_content(file_name)
        encoded_content = AsciiEncoder.encode_in_ascii(content)
        return encoded_content

    def get_file_modification_date(self, file_name):
        complete_file_name = self.root + file_name
        file_stat = os.stat(complete_file_name)
        modification_date = str(file_stat.st_mtime)

        return modification_date
