#!/usr/bin/python3
# -*- coding: utf-8 -*-

from protocole import Protocole
from xml.dom.minidom import Document, parseString


class ProtocoleXml(Protocole):
    """Interface du langage de communication XML"""

    PREFIXE_XML = "<?xml version=\"1.0\" ?>"

    def __init__(self):
        super(ProtocoleXml, self).__init__()
    pass

    def message_to_xml(self, tag, text=''):
        document = Document()

        texte_a_retourner = document.createElement(tag)
        document.appendChild(texte_a_retourner)
        if text:
            texte_xml = document.createTextNode(text)
            texte_a_retourner.appendChild(texte_xml)

        return document.toxml()

    def interpret(self, message, parent_tag, child_tag=''):
        document = parseString(message)

        if child_tag:
            return self.interpret_complex_xml(document, parent_tag, child_tag)
        else:
            return self.interpret_simple_xml(document, parent_tag)

    def interpret_simple_xml(self, document, tag_name):
        return document.getElementsByTagName(tag_name)[0].childNodes[0].data

    def interpret_complex_xml(self, document, parent_tag, child_tag):
        data = ''
        for node in document.getElementsByTagName(parent_tag):
            if node is not None:
                for child_node in node.getElementsByTagName(child_tag):
                    data += child_node.firstChild.data + '\n'

        return data

    def get_connexion(self):
        tag = "bonjourServeur"
        return self.message_to_xml(tag)

    def get_server_name(self):
        tag = "questionNomServeur"
        return self.message_to_xml(tag)

    def get_folder_list(self, folder_name):
        tag = "questionListeDossiers"
        return self.message_to_xml(tag, folder_name)

    def create_folder(self, folder_name):
        tag = "creerDossier"
        return self.message_to_xml(tag, folder_name)

    def quit(self):
        tag = "quitter"
        return self.message_to_xml(tag)
