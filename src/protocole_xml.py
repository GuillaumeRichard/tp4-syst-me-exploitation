#!/usr/bin/python3
# -*- coding: utf-8 -*-

from protocole import Protocole
from xml.dom.minidom import Document, parseString


#Rapport: ceci est le traducteur entre l'input du client et la requête xml,
#         et la réponse du serveur et l'information affichée à l'écran


class ProtocoleXml(Protocole):
    """Interface du langage de communication XML"""

    def __init__(self, server_root):
        super(Protocole, self).__init__()
        self.server_root = server_root

    @staticmethod
    def element_to_xml(tag, text=''):
        document = Document()

        texte_a_retourner = document.createElement(tag)
        document.appendChild(texte_a_retourner)
        if text:
            texte_xml = document.createTextNode(text)
            texte_a_retourner.appendChild(texte_xml)

        return document

    def interpret(self, message, parent_tag, child_tag=''):
        document = parseString(message)

        if child_tag:
            return self.interpret_complex_xml(document, parent_tag, child_tag)
        else:
            return self.interpret_simple_xml(document, parent_tag)

    @staticmethod
    def interpret_simple_xml(document, tag_name):
        return document.getElementsByTagName(tag_name)[0].childNodes[0].data

    @staticmethod
    def interpret_complex_xml(document, parent_tag, child_tag):
        data = []
        for node in document.getElementsByTagName(parent_tag):
            if node is not None:
                for child_node in node.getElementsByTagName(child_tag):
                    data.append(child_node.firstChild.data)

        return data

    def get_connexion(self):
        tag = "bonjourServeur"
        document = self.element_to_xml(tag)

        return document.toxml()

    def get_server_name(self):
        tag = "questionNomServeur"
        document = self.element_to_xml(tag)

        return document.toxml()

    def get_folder_list(self, folder_name):
        tag = "questionListeDossiers"
        # server_folder_name = self.get_server_folder_name(folder_name)
        document = self.element_to_xml(tag, folder_name)

        return document.toxml()

    def get_file_list(self, folder_name):
        tag = "questionListeFichiers"
        # server_folder_name = self.get_server_folder_name(folder_name)
        document = self.element_to_xml(tag, folder_name)

        return document.toxml()

    def create_folder(self, folder_name):
        tag = "creerDossier"
        server_folder_name = self.get_server_folder_name(folder_name)
        document = self.element_to_xml(tag, server_folder_name)

        return document.toxml()

    def upload_file(self, file_name, folder_name, signature, file_content, date):
        parent_tag = "televerserFichier"
        file_name_tag = "nom"
        folder_name_tag = "dossier"
        signature_tag = "signature"
        file_content_tag = "contenu"
        date_tag = "date"
        server_folder_name = self.get_server_folder_name(folder_name)

        xml_file_name = self.element_to_xml(file_name_tag, file_name)
        xml_folder_name = self.element_to_xml(folder_name_tag, server_folder_name)
        xml_signature = self.element_to_xml(signature_tag, signature)
        xml_content = self.element_to_xml(file_content_tag, file_content)
        xml_date = self.element_to_xml(date_tag, date)

        document = self.element_to_xml(parent_tag)

        document.childNodes[0].appendChild(xml_file_name.childNodes[0])
        document.childNodes[0].appendChild(xml_folder_name.childNodes[0])
        document.childNodes[0].appendChild(xml_signature.childNodes[0])
        document.childNodes[0].appendChild(xml_content.childNodes[0])
        document.childNodes[0].appendChild(xml_date.childNodes[0])

        return document.toxml()

    def delete_folder(self, folder_name):
        tag = "supprimerDossier"
        server_folder_name = self.get_server_folder_name(folder_name)
        document = self.element_to_xml(tag, server_folder_name)

        return document.toxml()

    def delete_file(self, file_name, folder_name):
        parent_tag = "supprimerFichier"
        file_name_tag = "nom"
        folder_name_tag = "dossier"

        server_folder_name = self.get_server_folder_name(folder_name)

        xml_file_name = self.element_to_xml(file_name_tag, file_name)
        xml_folder_name = self.element_to_xml(folder_name_tag, server_folder_name)

        document = self.element_to_xml(parent_tag)

        document.childNodes[0].appendChild(xml_file_name.childNodes[0])
        document.childNodes[0].appendChild(xml_folder_name.childNodes[0])

        return document.toxml()

    def verify_file_is_more_recent(self, file_name, folder_name, date):
        parent_tag = "questionFichierRecent"
        file_name_tag = "nom"
        folder_name_tag = "dossier"
        date_tag = "date"
        server_folder_name = self.get_server_folder_name(folder_name)

        xml_file_name = self.element_to_xml(file_name_tag, file_name)
        xml_folder_name = self.element_to_xml(folder_name_tag, server_folder_name)
        xml_date = self.element_to_xml(date_tag, date)

        document = self.element_to_xml(parent_tag)

        document.childNodes[0].appendChild(xml_file_name.childNodes[0])
        document.childNodes[0].appendChild(xml_folder_name.childNodes[0])
        document.childNodes[0].appendChild(xml_date.childNodes[0])

        return document.toxml()

    def verify_file_is_identical(self, file_name, folder_name, signature, date):
        parent_tag = "questionFichierIdentique"
        file_name_tag = "nom"
        folder_name_tag = "dossier"
        signature_tag = "signature"
        date_tag = "date"
        server_folder_name = self.get_server_folder_name(folder_name)

        xml_file_name = self.element_to_xml(file_name_tag, file_name)
        xml_folder_name = self.element_to_xml(folder_name_tag, server_folder_name)
        xml_signature = self.element_to_xml(signature_tag, signature)
        xml_date = self.element_to_xml(date_tag, date)

        document = self.element_to_xml(parent_tag)

        document.childNodes[0].appendChild(xml_file_name.childNodes[0])
        document.childNodes[0].appendChild(xml_folder_name.childNodes[0])
        document.childNodes[0].appendChild(xml_signature.childNodes[0])
        document.childNodes[0].appendChild(xml_date.childNodes[0])

        return document.toxml()

    def download_file(self, file_name, folder_name):
        parent_tag = "telechargerFichier"
        file_name_tag = "nom"
        folder_name_tag = "dossier"
        server_folder_name = self.get_server_folder_name(folder_name)

        xml_file_name = self.element_to_xml(file_name_tag, file_name)
        xml_folder_name = self.element_to_xml(folder_name_tag, server_folder_name)

        document = self.element_to_xml(parent_tag)

        document.childNodes[0].appendChild(xml_file_name.childNodes[0])
        document.childNodes[0].appendChild(xml_folder_name.childNodes[0])

        return document.toxml()

    def quit(self):
        tag = "quitter"
        document = self.element_to_xml(tag)

        return document.toxml()

    def get_server_folder_name(self, folder_name):
        return self.server_root + folder_name
